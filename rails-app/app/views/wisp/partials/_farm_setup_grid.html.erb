<div id="farmSetupGrid">

        <script type="text/javascript">
        <%= grid_javascript_settings %>
          var lastsel;
          var et_methods = <%= @et_methods.html_safe %>;
          
          // Display "Yes" or "No" for boolean
          function yesNoBoolFormat(cellvalue,options,rowObject) {
            if (cellvalue === undefined) {
              return("");
            } else {
              if (cellvalue == true || cellvalue == 'true') {
                return("Yes");
              } else {
                return("No");
              }
            }   
          }
          // And (sigh!) translate back
          function yesNoBoolUnformat(cellvalue,options,rowObject) {
            if (cellvalue === undefined) {
              return("");
            } else if (cellvalue == 'Yes') {
              return('true');
            } else {
              return('false');
            }
          }
          
          function addDeleteButton(cl) {
            var ids = jQuery("#farm_setup").getDataIDs();
            nRows = ids.length;
            //alert('nRows: '+nRows);
            if (nRows == 1)
              { 
              be = "<input style='height:22px;width:35px;' type='button' value='Del' disabled='true' title='Cannot delete last farm'/>"; 
              jQuery("#farm_setup").setRowData(cl,{act:be})
              }
            else 
            {
              for(var i=0;i<nRows;i++){ 
                var id = ids[i];
                be = "<input style='height:22px;width:35px;' type='button' value='Del' onclick=removeRow("+cl+"); ></ids>";
                jQuery("#farm_setup").setRowData(cl,{act:be})
              }
            }
          }
  
          function addNewFarmRow(method) {
            var grid = $('#farm_setup');
            newFarm = createNewFarm(method);
            curID = newFarm['id'];
            grid.addRowData(curID, newFarm); // add a new row with the new field's data
            addDeleteButton(curID);
            grid.editRow(curID,true); // put new row into inline-edit mode
            $('#farm_setup').trigger('reloadGrid');
          }
          
          function createNewFarm(method) {
            var frm={};
            et_method_id = et_methods[method];
            if (et_method_id == null) {
              et_method_id = et_methods['PctCoverEtMethod'];
            }
            // Why in heaven's name do I have to add the authenticity_token in here manually, when the other
            // forms seem to add it in just fine via application.js?
            $.ajax(
              {
                type: "POST",
                url: '<%= url_for :controller => 'farms', :action => :post_data %>',
                data: {group_id:group_id,parent_id:group_id,et_method_id:et_method_id,oper:'add',id:'_empty'},
                // url: '<%= grid_post_data_url "farms", @group %>' +
                // '&oper=add&id=_empty&authenticity_token='+encodeURIComponent(AUTH_TOKEN)+'&et_method_id='+et_method_id, 
                dataType: "json",
                contentType: "application/x-www-form-urlencoded", // This is so Rails knows to decode it
                async: false,
                success: function(json) {
                  frm = json;
                }
              }
            );
            return frm;
          }
          function removeRow(rowID) {
            jQuery('#farm_setup').delGridRow(rowID);
            $('#farm_setup').trigger('reloadGrid');
          }
          
          // From example http://stackoverflow.com/questions/5092571/how-to-make-cell-editable-dynamically-in-jqgrid
          
          
          jQuery(document).ready(function(){
            
          var mygrid = jQuery("#farm_setup").jqGrid({
              url: '<%= url_for :controller => "farms", :action => :index, :q => 1%>',
              // '/farms?q=1',
              // editurl:'<%= url_for :controller => "farms", :action => :post_data, :parent_id => @group %>',
              editurl: '<%= grid_post_data_url "farms", @group_id %>',
              datatype: "json",
              colNames:['Name','ET Method','Notes','AD < 0?','Delete','Group ID','ID'],
              colModel:[
                {name:'name', index:'name',width:83,editable:true},
                {
                  name:'et_method_id',index:'et_method_id', width:50,resizable:true,   
                  align:"left",sorttype:"text",editable:false,edittype:"select",
                  formatter:'select',
                  editoptions:   
                    { value:"1:Percent Cover;2:Leaf Area Index"},editrules:{required:true}
                },
                {name:'notes', index:'notes',width:87,editable:true, align:'right'},
                {name:'problem', index:'problem',formatter:yesNoBoolFormat,unformat:yesNoBoolUnformat,width:20, align:'right'},
                {name:'act', index:'act', width:20},
                {name:'group_id', index: 'group_id',width:10,hidden:true,editable:true},
                {name:'id', index:'id',width:10,hidden:true,editable:false}
              ],
              pager: '#farm_setup_pager',
              rowNum:180,
              rowList:[180],
              imgpath: '<%= image_folder_path("jqgrid") %>',
              sortname: '',
              viewrecords: true,
              height: 140,
              width: 918,
              sortorder: '',
              gridview: false,
              scrollrows: true,
              autowidth: false,
              rownumbers: false,
              multiselect: false,
              
              onSelectRow: function(id){ 
                if(id && id!==lastsel){ 
                  jQuery('#farm_setup').restoreRow(lastsel);
                  jQuery('#farm_setup').editRow(id,true); 
                  lastsel=id;
                  fillProblemsBox(id);
                } 
              },             
              
              loadComplete: function(){ 
                  var ids = jQuery("#farm_setup").getDataIDs();
                  fillProblemsBox(ids[0]);
                  for(var i=0;i<ids.length;i++){ 
                      var cl = ids[i];
                      addDeleteButton(cl); 
                  } 
              },
              
              subGrid:false,
              caption: "Farms"
            })
            // .navGrid('#farm_setup_pager',
            //   {edit:false,add:true,del:true,search:false,refresh:true},
            //   {afterSubmit:function(r,data){return true;(r,data,'edit');}},
            //   {afterSubmit:function(r,data){return true;(r,data,'add');}},
            //   {afterSubmit:function(r,data){return true;(r,data,'delete');}}
            // )
            
            mygrid.filterToolbar();mygrid[0].toggleToolbar();
          });
        </script>

        <table id="farm_setup" class="scroll" cellpadding="0" cellspacing="0"></table>
        <button type="button" onclick="addNewFarmRow('PctCoverEtMethod');">Add New Farm (% Cover)</button>
        <button type="button" onclick="addNewFarmRow('LaiEtMethod');">Add New Farm (Leaf Area Index)</button>
        
        <!-- <div id="farm_setup_pager" class="scroll" style="text-align:center;"></div> -->
      
</div>